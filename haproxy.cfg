global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	maxconn 2048
	tune.ssl.default-dh-param 2048

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	#mode tcp
	#option tcplog
	option	dontlognull
        timeout connect 5000
	#option forwardfor
	#option tcplog
	option http-server-close
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#http_port_80 -------------------------#####
#frontend www_frontend
	bind *:80
	redirect scheme https if !{ ssl_fc }
	
# It matches if the HTTP Host: field mentions any of the hostnames (after the '-i').


# Redirect the connection to the proper server cluster, depending on the match.




#	#edit_http_acl
#        acl host_web1 hdr(host) -i abin7.flexicloudhosting.com
#	#edit_http_acl
#        use_backend web1_cluster if host_web1
#	default_backend farm_docker2
#    
#
#backend web1_cluster
#   	balance leastconn
#	#edit_http_server
#   	http-request set-header X-Client-IP %[src]
#    	server web9 web9.lxd:80 check
#




#https_configuration ------------------------------#####
#create new frontend to process 443
frontend https_frontend
	bind *:443
	mode tcp
	option tcplog
#	default_backend farm_docker2
#acl_host
#	acl host_docker2 hdr(host) -i abin7.flexicloudhosting.com

#	use_backend farm_docker2 if host_docker2
#acl_backend
  
#Define backend for above frontend
#backend farm_docker2
#	mode tcp
#	balance roundrobin
#	server web9 10.142.205.152:443  
#backend_server

	
#backend avi_cluster
#    balance leastconn
#   http-request set-header X-Client-IP %[src]
#    server avi avi.lxd:80 check 

#backend webhosting_cluster
#    balance leastconn
#    http-request set-header X-Client-IP %[src]
#    server webhosting webhosting.lxd:80 check 

#backend avinash1_cluster
#    balance leastconn
#    http-request set-header X-Client-IP %[src]
#    server avinash1 avinash1.lxd:80 check 

